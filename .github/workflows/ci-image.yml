name: Backend CI

on:
  workflow_dispatch:
  pull_request:
    branches:
      - "main"
  push:
    branches:
      - "main"
    tags:
      - "[0-9]*.[0-9]*.[0-9]*"

jobs:
  build-test:
    name: Build and test with Maven
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Make wrapper executable
        run: chmod u+x mvnw

      - name: Build
        run: ./mvnw clean package

      - name: Test
        run: mvn -B clean test


  qodana:
    name: Scan code with Qodana
    runs-on: ubuntu-22.04
    permissions:
      contents: write
      pull-requests: write
      checks: write

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: 'Qodana Scan'
        uses: JetBrains/qodana-action@v2024.2
        with:
          args: --linter,jetbrains/qodana-jvm:2024.2
          pr-mode: false
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
          QODANA_ENDPOINT: 'https://qodana.cloud'


  generate-image-tag:
    name: Generate image tag
    runs-on: ubuntu-22.04
    outputs:
      image_tag: ${{ steps.generate-image-tag.outputs.image_tag }}
    needs: [build-test, qodana]
    steps:
      - uses: actions/checkout@v4
        with:
          # Necessary to get all tags for IMAGE_TAG generation with git describe
          fetch-depth: 0

      - name: Generate image tag
        id: generate-image-tag
        run: |
          image_tag=$(git describe --tags --always --first-parent --match "[0-9]*.[0-9]*.[0-9]*")
          echo "image_tag=$image_tag" >> $GITHUB_OUTPUT


  docker-image:
    name: Build and push Docker image
    runs-on: ubuntu-22.04
    permissions:
      packages: write 
    needs: generate-image-tag

    steps:
      - uses: actions/checkout@v4

      - name: Login to GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        env:
          DOCKER_BUILD_SUMMARY: false
          IMAGE_TAG: ${{ needs.generate-image-tag.outputs.image_tag }}
        with:
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${IMAGE_TAG}
